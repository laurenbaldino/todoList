{"version":3,"sources":["components/checkbox.js","App.js","index.js"],"names":["Checkbox","task","markDone","isChecked","name","checked","onChange","type","style","textDecoration","textDecorationColor","App","useState","setName","JSON","parse","localStorage","getItem","tasks","setTasks","completed","setCompleted","insertTask","e","alert","taskName","target","new_tasks","filter","moveBack","insertName","key","value","useEffect","setItem","stringify","className","textAlign","id","onKeyDown","htmlFor","onClick","marginRight","backgroundColor","map","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAuBeA,MAvBf,YAAkD,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAClC,OACE,+BACE,kCACE,uBACEC,KAAMH,EACNI,QAASF,EACTG,SAAUJ,EACVK,KAAK,aAEP,sBACEC,MAAO,CACLC,eAAgBN,EAAY,eAAiB,GAC7CO,oBAAqB,SAHzB,SAMGT,UCoGIU,MApGf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA0BD,mBACxBE,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAD/C,mBAAOC,EAAP,KAAcC,EAAd,KAGA,EAAkCP,mBAChCE,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,IADnD,mBAAOG,EAAP,KAAkBC,EAAlB,KAaA,SAASC,EAAWC,GACL,KAATnB,EACFoB,MAAM,0BAENL,EAAS,GAAD,mBAAKD,GAAL,CAAYd,KACpBS,EAAQ,KASZ,SAASX,EAASqB,GAChB,IAAIE,EAAWF,EAAEG,OAAOtB,KACpBuB,EAAS,YAAOT,GACpBS,EAAYA,EAAUC,QAAO,SAAC3B,GAAD,OAAUwB,IAAaxB,KACpDkB,EAASQ,GACTN,EAAa,GAAD,mBAAKD,GAAL,CAAgBK,KAE9B,SAASI,EAASN,GAChB,IAAIE,EAAWF,EAAEG,OAAOtB,KACpBuB,EAAS,YAAOP,GACpBO,EAAYA,EAAUC,QAAO,SAAC3B,GAAD,OAAUwB,IAAaxB,KACpDoB,EAAaM,GACbR,EAAS,GAAD,mBAAKD,GAAL,CAAYO,KAItB,SAASK,EAAWP,GACJ,UAAVA,EAAEQ,IACJT,IAEAT,EAAQU,EAAEG,OAAOM,OAIrB,OA9CAC,qBAAU,WACRjB,aAAakB,QAAQ,QAASpB,KAAKqB,UAAUjB,MAC5C,CAACA,IAEJe,qBAAU,WACRjB,aAAakB,QAAQ,YAAapB,KAAKqB,UAAUf,MAChD,CAACA,IAyCF,sBAAKgB,UAAU,YAAf,UACE,oBAAI5B,MAAO,CAAE6B,UAAW,UAAxB,wBACA,sBAAKD,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,uBACEE,GAAG,eACHF,UAAU,WACV7B,KAAK,OACLyB,MAAO5B,EACPE,SAAUwB,EACVS,UAAWT,IAEb,uBAAOU,QAAQ,eAAf,yBAEF,mBACEC,QAASnB,EACTd,MAAO,CAAEkC,YAAa,GAAIC,gBAAiB,QAC3CP,UAAU,+BAHZ,iBAOA,mBAAGK,QApDX,SAAkBlB,GAChBJ,EAAS,IACTE,EAAa,KAkDeb,MAAO,CAACmC,gBAAiB,QAASP,UAAU,+BAAlE,0BAIF,sBAAKA,UAAU,SAAf,UACE,wCACClB,EAAM0B,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAAU3C,SAAUA,EAAUC,WAAW,EAAOF,KAAM4C,UAG1D,sBAAKT,UAAU,SAAf,UACE,uCACChB,EAAUwB,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CAAU3C,SAAU2B,EAAU1B,WAAW,EAAMF,KAAM4C,iBCvGjEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d6ee927c.chunk.js","sourcesContent":["function Checkbox({ task, markDone, isChecked }) {\n  return (\n    <form>\n      <label>\n        <input\n          name={task}\n          checked={isChecked}\n          onChange={markDone}\n          type=\"checkbox\"\n        />\n        <span\n          style={{\n            textDecoration: isChecked ? \"line-through\" : \"\",\n            textDecorationColor: \"Green\",\n          }}\n        >\n          {task}\n        </span>\n      </label>\n    </form>\n  );\n}\n\nexport default Checkbox;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Checkbox from \"./components/checkbox\";\n\n// [\n//   'walk buster',\n//   'brush teeth'\n// ]\n\n// JSON.stringify(array) -> \"['walk buster', 'brush teeth']\"\n\n// {\n//   'key': 'value'\n// }\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [tasks, setTasks] = useState(\n    JSON.parse(localStorage.getItem(\"tasks\")) || []\n  );\n  const [completed, setCompleted] = useState(\n    JSON.parse(localStorage.getItem(\"completed\")) || []\n  );\n\n  // everytime we update tasks, save it the browser\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  useEffect(() => {\n    localStorage.setItem(\"completed\", JSON.stringify(completed));\n  }, [completed]);\n\n  function insertTask(e) {\n    if (name === \"\") {\n      alert(\"You must enter a task\");\n    } else {\n      setTasks([...tasks, name]);\n      setName(\"\");\n    }\n  }\n\n  function clearAll(e) {\n    setTasks([]);\n    setCompleted([]);\n  }\n\n  function markDone(e) {\n    let taskName = e.target.name;\n    let new_tasks = [...tasks];\n    new_tasks = new_tasks.filter((task) => taskName !== task);\n    setTasks(new_tasks);\n    setCompleted([...completed, taskName]);\n  }\n  function moveBack(e) {\n    let taskName = e.target.name;\n    let new_tasks = [...completed];\n    new_tasks = new_tasks.filter((task) => taskName !== task);\n    setCompleted(new_tasks);\n    setTasks([...tasks, taskName]);\n  }\n\n  //update tasks state -> change later\n  function insertName(e) {\n    if (e.key === \"Enter\") {\n      insertTask();\n    } else {\n      setName(e.target.value);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h2 style={{ textAlign: \"center\" }}>To Do List</h2>\n      <div className=\"row\">\n        <div className=\"col s12\">\n          <div className=\"input-field\">\n            <input\n              id=\"email_inline\"\n              className=\"validate\"\n              type=\"text\"\n              value={name}\n              onChange={insertName}\n              onKeyDown={insertName}\n            />\n            <label htmlFor=\"email_inline\">add task</label>\n          </div>\n          <a\n            onClick={insertTask}\n            style={{ marginRight: 10, backgroundColor: 'grey' }}\n            className=\"waves-effect waves-light btn\"\n          >\n            Add\n          </a>\n          <a onClick={clearAll} style={{backgroundColor: 'grey'}} className=\"waves-effect waves-light btn\">\n            Clear all\n          </a>\n        </div>\n        <div className=\"col s6\">\n          <h3>To Do:</h3>\n          {tasks.map((i) => (\n            <Checkbox markDone={markDone} isChecked={false} task={i} />\n          ))}\n        </div>\n        <div className=\"col s6\">\n          <h3>Done:</h3>\n          {completed.map((i) => (\n            <Checkbox markDone={moveBack} isChecked={true} task={i} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}